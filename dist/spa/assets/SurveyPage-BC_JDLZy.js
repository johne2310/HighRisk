import{u as V,f as D,G as k,a1 as I,c as w,o as _,w as f,n as u,a as i,p as c,am as q,s as S,h as N,k as H,l as R,an as Q,Q as x,m as y,a5 as h}from"./index-CFvj3fyk.js";import{Q as A}from"./QPage-Ck0ac_fP.js";import{u as U}from"./survey-store-DxChMPoQ.js";import{Q as B}from"./QForm-DIFtaur8.js";import{u as C}from"./settings-store-BClzBGOs.js";import{_ as F}from"./_plugin-vue_export-helper-DlAUqK2U.js";const O={class:"q-mb-md"},P={class:"q-mt-lg"},$={__name:"SurveyForm",props:{initialData:{type:Object,default:null}},emits:["submit"],setup(g,{emit:p}){const r=g,s=C(),o=V(),d={auditDate:new Date().toISOString().substr(0,10),collectorName:"",patientId:"",bedNumber:"",ward:"",hospital:"",isHighRisk:null,user_Id:o.user.id},e=D({...d}),v=[{label:"Yes",value:!0},{label:"No",value:!1}];k(()=>r.initialData,l=>{if(l){const t={};for(const a in l)t[a]=l[a];e.value={auditDate:t.auditDate||new Date().toISOString().substr(0,10),collectorName:t.collectorName||"",patientId:t.patientId||"",bedNumber:t.bedNumber||"",ward:t.ward||"",hospital:t.hospital||"",isHighRisk:t.isHighRisk!==void 0?t.isHighRisk:null,user_Id:t.user.id||o.user.id,...t}}},{immediate:!0}),I(()=>{if(console.log("uuser: ",o.user),!r.initialData){s.userSettings.defaultName&&(e.value.collectorName=s.userSettings.defaultName),s.userSettings.defaultHospital&&(e.value.hospital=s.userSettings.defaultHospital),s.userSettings.defaultWard&&(e.value.ward=s.userSettings.defaultWard);const l=localStorage.getItem("collectorName");!e.value.collectorName&&l&&(e.value.collectorName=l)}});const b=p,n=()=>{localStorage.setItem("collectorName",e.value.collectorName),s.userSettings.rememberSettings&&(s.userSettings.defaultName=e.value.collectorName,s.userSettings.defaultHospital=e.value.hospital,s.appSettings.autoSave||s.saveUserSettings()),b("submit",{...e.value})},m=()=>{if(r.initialData){const l={};for(const t in r.initialData)l[t]=r.initialData[t];e.value={auditDate:l.auditDate||new Date().toISOString().substr(0,10),patientId:l.patientId||"",bedNumber:l.bedNumber||"",ward:l.ward||"",hospital:l.hospital||"",isHighRisk:l.isHighRisk!==void 0?l.isHighRisk:null,user_Id:o.user.id,...l}}else e.value={...d,auditDate:new Date().toISOString().substr(0,10),collectorName:e.value.collectorName,hospital:e.value.hospital,ward:e.value.ward}};return(l,t)=>(_(),w(B,{onSubmit:n,class:"q-gutter-md"},{default:f(()=>[t[8]||(t[8]=u("div",{class:"text-h6 q-mb-md"},"Patient Medication Audit Form",-1)),i(c,{filled:"",modelValue:e.value.auditDate,"onUpdate:modelValue":t[0]||(t[0]=a=>e.value.auditDate=a),label:"Date of Audit *",type:"date",rules:[a=>!!a||"Date is required"]},null,8,["modelValue","rules"]),i(c,{filled:"",modelValue:e.value.collectorName,"onUpdate:modelValue":t[1]||(t[1]=a=>e.value.collectorName=a),label:"Data Collector Name *",rules:[a=>!!a||"Name is required"]},null,8,["modelValue","rules"]),i(c,{filled:"",modelValue:e.value.patientId,"onUpdate:modelValue":t[2]||(t[2]=a=>e.value.patientId=a),label:"Patient ID *",rules:[a=>!!a||"Patient ID is required"]},null,8,["modelValue","rules"]),i(c,{filled:"",modelValue:e.value.bedNumber,"onUpdate:modelValue":t[3]||(t[3]=a=>e.value.bedNumber=a),label:"Bed Number *",rules:[a=>!!a||"Bed number is required"]},null,8,["modelValue","rules"]),i(c,{filled:"",modelValue:e.value.ward,"onUpdate:modelValue":t[4]||(t[4]=a=>e.value.ward=a),label:"Ward *",rules:[a=>!!a||"Ward is required"]},null,8,["modelValue","rules"]),i(c,{filled:"",modelValue:e.value.hospital,"onUpdate:modelValue":t[5]||(t[5]=a=>e.value.hospital=a),label:"Hospital *",rules:[a=>!!a||"Hospital is required"]},null,8,["modelValue","rules"]),u("div",O,[t[7]||(t[7]=u("div",{class:"text-subtitle1 q-mb-sm"},"Is the patient on 5 or more regular medications? *",-1)),i(q,{modelValue:e.value.isHighRisk,"onUpdate:modelValue":t[6]||(t[6]=a=>e.value.isHighRisk=a),options:v,color:"primary",inline:""},null,8,["modelValue"])]),u("div",P,[i(S,{label:"Submit",type:"submit",color:"primary"}),i(S,{label:"Reset",type:"reset",color:"secondary",flat:"",class:"q-ml-sm",onClick:m})])]),_:1}))}},W=F($,[["__scopeId","data-v-18b7471f"]]),E={class:"row justify-center"},j={class:"col-12 col-md-8"},G={class:"text-h5 text-primary q-mb-md"},M={class:"text-subtitle2 q-mb-lg"},X={__name:"SurveyPage",setup(g){const p=H(),r=R(),s=Q(),o=U(),d=N(()=>s.params.id),e=N(()=>!!d.value),v=D(null);I(async()=>{e.value&&(await o.fetchAudits(),v.value=o.getAuditById(d.value),v.value||(p.notify({color:"negative",icon:"error",message:"Audit not found",position:"top",timeout:2e3}),r.push("/surveys")))});const b=async n=>{console.log("Form submitted:",n);let m;e.value?m=await o.editAudit(d.value,n):m=await o.addAudit(n);const{success:l,error:t}=m;l?p.notify({color:"positive",icon:"check_circle",message:e.value?"Survey data updated successfully":"Survey data saved successfully",position:"top",timeout:2e3}):p.notify({color:"negative",icon:"error",message:`Error ${e.value?"updating":"saving"} data: ${t||"Unknown error"}`,position:"top",timeout:2e3})};return(n,m)=>(_(),w(A,{padding:""},{default:f(()=>[u("div",E,[u("div",j,[i(x,{class:"q-pa-md"},{default:f(()=>[i(y,null,{default:f(()=>[u("div",G,h(e.value?"Edit Patient Audit":"New Patient Audit"),1),u("div",M,h(e.value?"Update the patient medication audit information.":"Complete the form below to record a patient medication audit."),1)]),_:1}),i(y,null,{default:f(()=>[i(W,{onSubmit:b,"initial-data":v.value},null,8,["initial-data"])]),_:1})]),_:1})])])]),_:1}))}};export{X as default};
