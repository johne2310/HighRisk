import{am as W,f,h as w,_,c as S,o as y,w as p,k as m,a as d,Q as H,j as U,l as B,a4 as c,aE as C,n as k,a0 as q,a1 as x}from"./index-BAC6eBZo.js";import{Q as b}from"./QSelect-CstxBHnd.js";import{Q as N}from"./QTooltip-Dv8JZsVA.js";import{Q as F}from"./QForm-Bq_xKdJ6.js";import{Q as D}from"./QPage-B0sRmVCx.js";import{u as E}from"./use-quasar-VyFHUxV0.js";import{u as I}from"./settings-store-1uhI6hLg.js";import{s as Q}from"./index-BMVzaKM0.js";import"./QItem-CbgizEzX.js";const T=W("hospital",()=>{const v=f([]),u=f([]),i=f(!1),l=f(null),s=w(()=>t=>t?u.value.filter(e=>e.hospital_id===t):[]),o=w(()=>t=>v.value.find(e=>e.hospital_id===t)),n=w(()=>t=>u.value.find(e=>e.ward_id===t)),g=async()=>{i.value=!0,l.value=null;try{const{data:t,error:e}=await Q.from("hospitals").select("*");if(e)throw e;return v.value=t||[],{success:!0,data:t}}catch(t){return console.error("Error fetching hospitals:",t),l.value=t.message||"Failed to fetch hospitals",{success:!1,error:l.value}}finally{i.value=!1}},h=async()=>{i.value=!0,l.value=null;try{const{data:t,error:e}=await Q.from("wards").select("*");if(e)throw e;return u.value=t||[],{success:!0,data:t}}catch(t){return console.error("Error fetching wards:",t),l.value=t.message||"Failed to fetch wards",{success:!1,error:l.value}}finally{i.value=!1}};return{hospitals:v,wards:u,loading:i,error:l,getFilteredWards:s,getHospitalById:o,getWardById:n,fetchHospitals:g,fetchWards:h,initializeData:async()=>{await Promise.all([g(),h()])}}}),z={class:"row q-col-gutter-md"},P={class:"col-12 col-md-6"},R={__name:"SettingsPage",setup(v){const u=E(),i=I(),l=T(),{userSettings:s}=i,o=f(null),n=f(null),g=w(()=>l.getFilteredWards(o.value));function h(){if(n.value=null,console.log("Selected hospital ID:",o.value),o.value){const e=l.getHospitalById(o.value);console.log("Hospital change details:",e),e&&(s.defaultHospital=e.hospital)}}function V(){if(n.value){const e=l.getWardById(n.value);e&&(console.log("Ward being change: ",e),s.defaultWard=e.ward)}}_(async()=>{await l.initializeData(),console.log("hospital store: ",l.hospitals),console.log("ward store: ",l.wards),setTimeout(()=>{if(s.defaultHospital){const e=l.hospitals.find(a=>a.hospital===s.defaultHospital);e&&(o.value=e.hospital_id)}if(s.defaultWard){const e=l.wards.find(a=>a.ward===s.defaultWard);e&&(n.value=e.ward_id)}},500)});const t=()=>{const e=i.saveUserSettings();e.success?u.notify({color:"positive",icon:"check_circle",message:"User settings saved successfully",position:"top",timeout:2e3}):u.notify({color:"negative",icon:"error",message:`Failed to save user settings: ${e.error}`,position:"top",timeout:2e3})};return(e,a)=>(y(),S(D,{padding:""},{default:p(()=>[a[6]||(a[6]=m("div",{class:"text-h4 text-primary q-mb-md"},"Application Settings",-1)),m("div",z,[m("div",P,[d(H,null,{default:p(()=>[d(U,null,{default:p(()=>[a[5]||(a[5]=m("div",{class:"text-h6"},"User Settings",-1)),d(F,{class:"q-gutter-md q-mt-md"},{default:p(()=>[d(B,{filled:"",modelValue:c(s).defaultName,"onUpdate:modelValue":a[0]||(a[0]=r=>c(s).defaultName=r),label:"Default Collector Name"},null,8,["modelValue"]),d(b,{filled:"",modelValue:o.value,"onUpdate:modelValue":[a[1]||(a[1]=r=>o.value=r),h],options:c(l).hospitals,label:"Select Hospital","option-label":"hospital","option-value":"hospital_id","map-options":"","emit-value":"",rules:[r=>!!r||"Hospital selection is required"]},null,8,["modelValue","options","rules"]),(y(),S(b,{filled:"",modelValue:n.value,"onUpdate:modelValue":[a[2]||(a[2]=r=>n.value=r),V],options:g.value,label:"Select Ward","option-label":"ward","option-value":"ward_id","map-options":"","emit-value":"",rules:[r=>!!r||"Ward selection is required"],disable:!o.value,key:"ward-select-"+(o.value||"none")},null,8,["modelValue","options","rules","disable"])),d(C,{modelValue:c(s).autoSave,"onUpdate:modelValue":a[3]||(a[3]=r=>c(s).autoSave=r),label:"Auto save settings"},null,8,["modelValue"]),m("div",null,[d(k,{color:"primary",label:"Save User Settings",onClick:t,disable:c(s).autoSave},{default:p(()=>[c(s).autoSave?(y(),S(N,{key:0},{default:p(()=>a[4]||(a[4]=[x(" Settings are automatically saved when auto-save is enabled ")])),_:1})):q("",!0)]),_:1},8,["disable"])])]),_:1})]),_:1})]),_:1})])])]),_:1}))}};export{R as default};
