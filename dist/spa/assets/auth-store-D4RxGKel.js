import{aD as f,f as u,h}from"./index-Mv9NdxZw.js";import{e as n}from"./index-M353X4_W.js";const E=f("auth",()=>{const t=u(null),a=u(!1),o=u(null),i=h(()=>!!t.value),c=async()=>{a.value=!0,o.value=null;try{const{data:{session:e},error:r}=await n.auth.getSession();if(r)throw r;e?t.value=e.user:t.value=null}catch(e){console.error("Error initializing auth store:",e),o.value=e.message,t.value=null}finally{a.value=!1}n.auth.onAuthStateChange((e,r)=>{e==="SIGNED_IN"&&console.log("Signed in"),e==="SIGNED_OUT"&&console.log("Signed out"),e==="PASSWORD_RECOVERY"&&console.log("Password recovery"),e==="EMAIL_VERIFICATION"&&console.log("Email verification"),r?t.value=r.user:t.value=null})};async function g(e){try{const{data:r,error:s}=await n.auth.signInWithOtp({email:e,options:{shouldCreateUser:!1,emailRedirectTo:"https://www.day41.app/#/dashboard"}});return s?(console.error("Error sending magic link:",s.message),{success:!1,error:s.message}):(console.log("Magic link sent successfully!"),{success:!0,data:r})}catch(r){return console.error("Unexpected error:",r.message),{success:!1,error:r.message}}}return{user:t,loading:a,error:o,isAuthenticated:i,initialize:c,signIn:async(e,r)=>{a.value=!0,o.value=null;try{const{data:s,error:l}=await n.auth.signInWithPassword({email:e,password:r});if(l)throw l;return t.value=s.user,console.log("User is: ",t),{success:!0}}catch(s){return console.error("Error signing in:",s),o.value=s.message,{success:!1,error:s.message}}finally{a.value=!1}},signUp:async(e,r)=>{a.value=!0,o.value=null;try{const{data:s,error:l}=await n.auth.signUp({email:e,password:r,options:{emailRedirectTo:"https://www.day41.app/#/login"}});if(l)throw l;return{success:!0,data:s}}catch(s){return console.error("Error signing up:",s),o.value=s.message,{success:!1,error:s.message}}finally{a.value=!1}},signOut:async()=>{a.value=!0,o.value=null;try{const{error:e}=await n.auth.signOut();if(e)throw e;return t.value=null,{success:!0}}catch(e){return console.error("Error signing out:",e),o.value=e.message,{success:!1,error:e.message}}finally{a.value=!1}},resetPassword:async e=>{a.value=!0,o.value=null;try{const{error:r}=await n.auth.resetPasswordForEmail(e,{});if(r)throw r;return{success:!0}}catch(r){return console.error("Error resetting password:",r),o.value=r.message,{success:!1,error:r.message}}finally{a.value=!1}},signInWithMagicLink:g}});export{E as useAuthStore};
