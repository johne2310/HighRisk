import{r as D,w as _,H as h,W as w,X as V,Y as f,a3 as d,_ as o,ad as c,ae as I,a4 as b,a as S,aa as k,af as q,ab as H,ac as N,a1 as y}from"./index-D8Nd6p7p.js";import{Q as R}from"./QPage-OZMN7Qm_.js";import{u as x}from"./use-quasar-DgEGoSi7.js";import{u as Q}from"./survey-store-yurLnklg.js";import{Q as U}from"./QForm-aiHYy2K7.js";import{u as A}from"./settings-store-BcNW1Dj9.js";import"./index-DMppvs0A.js";const O=(p,n)=>{const s=p.__vccOpts||p;for(const[i,u]of n)s[i]=u;return s},B={class:"q-mb-md"},C={class:"q-mt-lg"},F={__name:"SurveyForm",props:{initialData:{type:Object,default:null}},emits:["submit"],setup(p,{emit:n}){const s=p,i=A(),u={auditDate:new Date().toISOString().substr(0,10),collectorName:"",patientId:"",bedNumber:"",ward:"",hospital:"",isHighRisk:null},e=D({...u}),r=[{label:"Yes",value:!0},{label:"No",value:!1}];_(()=>s.initialData,l=>{if(l){const t={};for(const a in l)t[a]=l[a];e.value={auditDate:t.auditDate||new Date().toISOString().substr(0,10),collectorName:t.collectorName||"",patientId:t.patientId||"",bedNumber:t.bedNumber||"",ward:t.ward||"",hospital:t.hospital||"",isHighRisk:t.isHighRisk!==void 0?t.isHighRisk:null,...t}}},{immediate:!0}),h(()=>{if(!s.initialData){i.userSettings.defaultName&&(e.value.collectorName=i.userSettings.defaultName),i.userSettings.defaultHospital&&(e.value.hospital=i.userSettings.defaultHospital),i.userSettings.defaultWard&&(e.value.ward=i.userSettings.defaultWard);const l=localStorage.getItem("collectorName");!e.value.collectorName&&l&&(e.value.collectorName=l)}});const v=n,g=()=>{localStorage.setItem("collectorName",e.value.collectorName),i.userSettings.rememberSettings&&(i.userSettings.defaultName=e.value.collectorName,i.userSettings.defaultHospital=e.value.hospital,i.userSettings.defaultWard=e.value.ward,i.appSettings.autoSave||i.saveUserSettings()),v("submit",{...e.value})},m=()=>{if(s.initialData){const l={};for(const t in s.initialData)l[t]=s.initialData[t];e.value={auditDate:l.auditDate||new Date().toISOString().substr(0,10),collectorName:l.collectorName||"",patientId:l.patientId||"",bedNumber:l.bedNumber||"",ward:l.ward||"",hospital:l.hospital||"",isHighRisk:l.isHighRisk!==void 0?l.isHighRisk:null,...l}}else e.value={...u,auditDate:new Date().toISOString().substr(0,10),collectorName:e.value.collectorName,hospital:e.value.hospital,ward:e.value.ward}};return(l,t)=>(V(),w(U,{onSubmit:g,class:"q-gutter-md"},{default:f(()=>[t[8]||(t[8]=d("div",{class:"text-h6 q-mb-md"},"Patient Medication Audit Form",-1)),o(c,{filled:"",modelValue:e.value.auditDate,"onUpdate:modelValue":t[0]||(t[0]=a=>e.value.auditDate=a),label:"Date of Audit *",type:"date",rules:[a=>!!a||"Date is required"]},null,8,["modelValue","rules"]),o(c,{filled:"",modelValue:e.value.collectorName,"onUpdate:modelValue":t[1]||(t[1]=a=>e.value.collectorName=a),label:"Data Collector Name *",rules:[a=>!!a||"Name is required"]},null,8,["modelValue","rules"]),o(c,{filled:"",modelValue:e.value.patientId,"onUpdate:modelValue":t[2]||(t[2]=a=>e.value.patientId=a),label:"Patient ID *",rules:[a=>!!a||"Patient ID is required"]},null,8,["modelValue","rules"]),o(c,{filled:"",modelValue:e.value.bedNumber,"onUpdate:modelValue":t[3]||(t[3]=a=>e.value.bedNumber=a),label:"Bed Number *",rules:[a=>!!a||"Bed number is required"]},null,8,["modelValue","rules"]),o(c,{filled:"",modelValue:e.value.ward,"onUpdate:modelValue":t[4]||(t[4]=a=>e.value.ward=a),label:"Ward *",rules:[a=>!!a||"Ward is required"]},null,8,["modelValue","rules"]),o(c,{filled:"",modelValue:e.value.hospital,"onUpdate:modelValue":t[5]||(t[5]=a=>e.value.hospital=a),label:"Hospital *",rules:[a=>!!a||"Hospital is required"]},null,8,["modelValue","rules"]),d("div",B,[t[7]||(t[7]=d("div",{class:"text-subtitle1 q-mb-sm"},"Is the patient on 5 or more regular medications? *",-1)),o(I,{modelValue:e.value.isHighRisk,"onUpdate:modelValue":t[6]||(t[6]=a=>e.value.isHighRisk=a),options:r,color:"primary",inline:""},null,8,["modelValue"])]),d("div",C,[o(b,{label:"Submit",type:"submit",color:"primary"}),o(b,{label:"Reset",type:"reset",color:"secondary",flat:"",class:"q-ml-sm",onClick:m})])]),_:1}))}},P=O(F,[["__scopeId","data-v-d9c10863"]]),W={class:"row justify-center"},$={class:"col-12 col-md-8"},E={class:"text-h5 text-primary q-mb-md"},j={class:"text-subtitle2 q-mb-lg"},L={__name:"SurveyPage",setup(p){const n=x(),s=k(),i=q(),u=Q(),e=S(()=>i.params.id),r=S(()=>!!e.value),v=D(null);h(async()=>{r.value&&(await u.fetchAudits(),v.value=u.getAuditById(e.value),v.value||(n.notify({color:"negative",icon:"error",message:"Audit not found",position:"top",timeout:2e3}),s.push("/surveys")))});const g=async m=>{console.log("Form submitted:",m);let l;r.value?l=await u.editAudit(e.value,m):l=await u.addAudit(m);const{success:t,error:a}=l;t?n.notify({color:"positive",icon:"check_circle",message:r.value?"Survey data updated successfully":"Survey data saved successfully",position:"top",timeout:2e3}):n.notify({color:"negative",icon:"error",message:`Error ${r.value?"updating":"saving"} data: ${a||"Unknown error"}`,position:"top",timeout:3e3})};return(m,l)=>(V(),w(R,{padding:""},{default:f(()=>[d("div",W,[d("div",$,[o(H,{class:"q-pa-md"},{default:f(()=>[o(N,null,{default:f(()=>[d("div",E,y(r.value?"Edit Patient Audit":"New Patient Audit"),1),d("div",j,y(r.value?"Update the patient medication audit information.":"Complete the form below to record a patient medication audit."),1)]),_:1}),o(N,null,{default:f(()=>[o(P,{onSubmit:g,"initial-data":v.value},null,8,["initial-data"])]),_:1})]),_:1})])])]),_:1}))}};export{L as default};
