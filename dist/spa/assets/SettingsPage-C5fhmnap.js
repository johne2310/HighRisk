import{aF as W,f,h as w,aN as b,a1 as H,c as S,o as y,w as p,k as _,n as m,a as d,Q as U,m as B,p as C,a7 as c,aO as N,s as k,a3 as q,a4 as x}from"./index-D3R2eLqg.js";import{Q}from"./QSelect-DaoMlUqt.js";import{Q as F}from"./QTooltip-D4RcjxCD.js";import{Q as D}from"./QForm-CnZwQt26.js";import{Q as I}from"./QPage-CtBVx67R.js";import{u as E}from"./settings-store-Ccz3395Y.js";import"./QItem-B0kkIvZV.js";const T=W("hospital",()=>{const v=f([]),u=f([]),i=f(!1),l=f(null),s=w(()=>a=>a?u.value.filter(e=>e.hospital_id===a):[]),o=w(()=>a=>v.value.find(e=>e.hospital_id===a)),n=w(()=>a=>u.value.find(e=>e.ward_id===a)),g=async()=>{i.value=!0,l.value=null;try{const{data:a,error:e}=await b.from("hospitals").select("*");if(e)throw e;return v.value=a||[],{success:!0,data:a}}catch(a){return console.error("Error fetching hospitals:",a),l.value=a.message||"Failed to fetch hospitals",{success:!1,error:l.value}}finally{i.value=!1}},h=async()=>{i.value=!0,l.value=null;try{const{data:a,error:e}=await b.from("wards").select("*");if(e)throw e;return u.value=a||[],{success:!0,data:a}}catch(a){return console.error("Error fetching wards:",a),l.value=a.message||"Failed to fetch wards",{success:!1,error:l.value}}finally{i.value=!1}};return{hospitals:v,wards:u,loading:i,error:l,getFilteredWards:s,getHospitalById:o,getWardById:n,fetchHospitals:g,fetchWards:h,initializeData:async()=>{await Promise.all([g(),h()])}}}),z={class:"row q-col-gutter-md"},P={class:"col-12 col-md-6"},K={__name:"SettingsPage",setup(v){const u=_(),i=E(),l=T(),{userSettings:s}=i,o=f(null),n=f(null),g=w(()=>l.getFilteredWards(o.value));function h(){if(n.value=null,console.log("Selected hospital ID:",o.value),o.value){const e=l.getHospitalById(o.value);console.log("Hospital change details:",e),e&&(s.defaultHospital=e.hospital)}}function V(){if(n.value){const e=l.getWardById(n.value);e&&(console.log("Ward being change: ",e),s.defaultWard=e.ward)}}H(async()=>{await l.initializeData(),console.log("hospital store: ",l.hospitals),console.log("ward store: ",l.wards),setTimeout(()=>{if(s.defaultHospital){const e=l.hospitals.find(t=>t.hospital===s.defaultHospital);e&&(o.value=e.hospital_id)}if(s.defaultWard){const e=l.wards.find(t=>t.ward===s.defaultWard);e&&(n.value=e.ward_id)}},500)});const a=()=>{const e=i.saveUserSettings();e.success?u.notify({color:"positive",icon:"check_circle",message:"User settings saved successfully",position:"top",timeout:2e3}):u.notify({color:"negative",icon:"error",message:`Failed to save user settings: ${e.error}`,position:"top",timeout:2e3})};return(e,t)=>(y(),S(I,{padding:""},{default:p(()=>[t[6]||(t[6]=m("div",{class:"text-h4 text-primary q-mb-md"},"Application Settings",-1)),m("div",z,[m("div",P,[d(U,null,{default:p(()=>[d(B,null,{default:p(()=>[t[5]||(t[5]=m("div",{class:"text-h6"},"User Settings",-1)),d(D,{class:"q-gutter-md q-mt-md"},{default:p(()=>[d(C,{filled:"",modelValue:c(s).defaultName,"onUpdate:modelValue":t[0]||(t[0]=r=>c(s).defaultName=r),label:"Default Collector Name"},null,8,["modelValue"]),d(Q,{filled:"",modelValue:o.value,"onUpdate:modelValue":[t[1]||(t[1]=r=>o.value=r),h],options:c(l).hospitals,label:"Select Hospital","option-label":"hospital","option-value":"hospital_id","map-options":"","emit-value":"",rules:[r=>!!r||"Hospital selection is required"]},null,8,["modelValue","options","rules"]),(y(),S(Q,{filled:"",modelValue:n.value,"onUpdate:modelValue":[t[2]||(t[2]=r=>n.value=r),V],options:g.value,label:"Select Ward","option-label":"ward","option-value":"ward_id","map-options":"","emit-value":"",rules:[r=>!!r||"Ward selection is required"],disable:!o.value,key:"ward-select-"+(o.value||"none")},null,8,["modelValue","options","rules","disable"])),d(N,{modelValue:c(s).autoSave,"onUpdate:modelValue":t[3]||(t[3]=r=>c(s).autoSave=r),label:"Auto save settings"},null,8,["modelValue"]),m("div",null,[d(k,{color:"primary",label:"Save User Settings",onClick:a,disable:c(s).autoSave},{default:p(()=>[c(s).autoSave?(y(),S(F,{key:0},{default:p(()=>t[4]||(t[4]=[x(" Settings are automatically saved when auto-save is enabled ")])),_:1})):q("",!0)]),_:1},8,["disable"])])]),_:1})]),_:1})]),_:1})])])]),_:1}))}};export{K as default};
